<html><head>
<meta http-equiv="Content-Language" content="pt">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>MIRONE: look into gmt grids and MUCH more</title></head>

<body background="images/sumtextb.jpg">

<table border="1" cellspacing="0" style="border-collapse: collapse; border-width: 0" width="85%" id="table1" cellpadding="2">
	<tr>
		<td width="81%" style="border-style: none; border-width: medium" align="left" valign="top">
		<div align="center">
        <O:P>

		</div>

<p align="center"><font size="7">Mirone</font></p>
<p align="center">
<img border="0" src="mirone.png" width="509" height="75"></p>
<p align="center"><b>by</b></p>
<p align="center"><b><font size="4">Joaquim Luis</font></b></p>
<p align="center"><font size="4">(<a href="http://www.ualg.pt/cima/">CIMA</a> - University of Algarve)</font></p>
<hr>

<ul>
  <li><font size="4"><a href="#FILE">File</a></font></li>
  <li><font size="4"><a href="#IMAGE">Image</a></font></li>
  <li><font size="4"><a href="#TOOLS">Tools</a></font></li>
  <li><font size="4"><a href="#DRAW">Draw</a></font></li>
  <li><font size="4"><a href="#DATASETS">Datasets</a></font></li>
	<li><font size="4"><a href="#GEOPHYSICS">Geophysics</a></font></li>
	<li><font size="4"><a href="#Grid Tools">Grid Tools</a></font></li>
  <li><font size="4"><a href="#INSTALLATION">Installation</a></font></li>
</ul>
<hr>

<p><font size="4">INTRODUCTION</font></p>
<p><span lang="en-gb">Mirone is the product that resulted from the evolution of the M_GMT image 
viewer. It has grown so much that I decided to make it an independent program. 
On the other hand, M_GMT image viewer was replaced by a &quot;Mirone light&quot; that has 
only limited viewing capacities. Mirone's first purpose was to visualize and 
manipulate GMT 
grids but many other formats are also available. Namely: GeoTIFF DEM, DTED, USGS 
DEM, USGS SDTS DEM, Gtopo30, SRTM DEM, Arc/Info ascii/binary grids, ENVI, ERDAS 
.img, GeoTIFF, GXF, Mars MOLA grids as well as common image formats. This is mainly accomplished trough 
a mex interface to the GDAL library. Mirone doesn't support map projections and 
its natural coordinate system are the geographical coordinates. Many operations 
are only programmed to work within this system, using the ellipsoidal Earth. Given this limitation, it should be used in
</span>
<span lang="EN-GB" style="font-size: 12.0pt; font-family: Times New Roman">
combination </span><span lang="en-gb">with GMT. Particularly with the new GMT4.0 version. Users 
are strongly advised to install this version (in fact some operations like the 
ones provide by the Geographic Calculator won't work with previous versions). All graphics produced by Mirone 
can be exported as a set of 3 RGB grids and lately plotted with the superior 
capacity GMT.</span></p>
<p><span lang="en-gb">Because it was written in Matlab this is the natural environment to run 
Mirone and where it runs faster. However, for Windows users a pre-compiled 
version is also available. For distributing Matlab executable programs a set of 
Matlab dlls must be shipped with the program. These dlls take more than 8 Mb and 
that's one of the reasons why the MIRONEsetup.exe file takes about 18 Mb. The 
others are due to the fact that the setup includes both Mirone and M_GMT and 
also because a small database (see <a href="#DATASETS">Datasets</a>) is included 
in the distribution (not to mention that Matlab compiled programs are stupidly 
large).</span></p>
<p style="margin-top: 0; margin-bottom: 0"><b><span lang="EN-GB">Important 
(personal) notes about Matlab:</span></b><span lang="EN-GB"> Matlab is a very 
powerful tool for software development. The language is very is easy to learn, 
it contains an endless collection of mathematical functions and it can (not 
always) be almost as fast (if correctly programmed) as a compiled program 
written in other programming languages. It permits also to a moderately skilled 
programmers as myself (I mean amateur), that one and a half year ago had no idea 
on how to write Graphical User Interfaces programs, to come out with things like 
Mirone. But roses have needles, and probably the sharpest one is the Matlab’s 
voracity for memory (well, windows generations are ununderstandably slow as well).</span></p>
<p style="margin-top: 0; margin-bottom: 0"><span lang="en-gb">&nbsp;&nbsp;&nbsp; 
</span> <span lang="EN-GB">
No matter how much RAM you have available, it will not be enough when processing 
even moderately sized data. There are two reasons for that: the first, and 
prevailing one, is the (incomprehensible) imposition that all calculus are 
performed with double precision variables. No matter if you just want to add 2 + 
2, “2” must be a double (that takes 4 times more memory than a <i>short int</i> 
“2”). Add to this the (understandable) requirement that, for efficient 
performance, vector programming should be adopted. The result is an explosive 
mixture because auxiliary variables have to be vectors (matrices in fact) also 
in double precision. Add still the second reason; Matworks programmers where 
often careless on memory management programming. I will give my favourite 
example to sustain this statement. A function called <i>surfnorm</i> computes 
the surface normal components for the surface Z. This is need, for example, to 
do surface illuminations. Well, that function uses <b>14</b> times the size of 
the original matrix. Proceeding a little further, lets assume that you loaded a 
10 Mb gmt grid (in single precision as usual). Because it has to be in double 
precision for being manipulated in Matlab, it will occupy 20 Mb. Now call <i>
surfnorm</i> and you need 14 <i>&nbsp;x</i> 20 = 280 Mb, just to compute the surface 
normal. That function could be changed (and it was in Mirone) to use “only” 8 
times the matrix size, and you save 6 <i>&nbsp;x</i> 20 = 120 Mb of RAM space. I will 
let as an exercise to repeat this computations for a gtopo30 tile that has about 
60 Mb (in <i>short int</i>).</span><span lang="en-gb"> - (a 1.44 Gb saving? An so what, where will 
I get the other 1.9 Gb?)</span></p>
<p style="margin-top: 0; margin-bottom: 0">
<span style="font-size: 12.0pt; font-family: Times New Roman" lang="en-gb">&nbsp;&nbsp;&nbsp;
</span>
<span lang="EN-GB" style="font-size: 12.0pt; font-family: Times New Roman">
Enough of divagations, all the above to say that when processing large grids you 
better have as much RAM available</span><span style="font-size: 12.0pt; font-family: Times New Roman" lang="en-gb">
</span>
<span lang="EN-GB" style="font-size: 12.0pt; font-family: Times New Roman">as 
possible. I spent a lot of effort in inventing tricks to fight the <i>voracity</i> 
and</span><span style="font-size: 12.0pt; font-family: Times New Roman" lang="en-gb">, as far 
as I can tell,</span><span lang="EN-GB" style="font-size: 12.0pt; font-family: Times New Roman"> 
they </span>
<span style="font-size: 12.0pt; font-family: Times New Roman" lang="en-gb">work 
very well. Particular in 0.6 version where most of heavy calculus is either done 
by &quot;mexified&quot; GMT programs or other mex files written by me that use only single 
precision arithmetic's (which is enough in most of cases).</span></p>
<p style="margin-top: 0; margin-bottom: 0">&nbsp;</p>
<hr>

<p><font size="4"><a name="FILE">FILE</a></font></p>

		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Preferences</b> -&nbsp; Here you 
set (or change) important parameters to the functioning of this program. Namely:</span></p>
			<blockquote>
				<p style="margin-bottom: 5px"><span lang="en-gb">- The grid/image type of coordinates. Select Geographic (default) if you are 
working with a grid whose coordinates are longitude and latitude. Select 
Cartesian otherwise. This is an important setting because some operations, like measuring, 
				depend on knowing if we are dealing with geographic or Cartesian coordinates. 
When a grid is read Mirone tries to guess what coordinates it has and although 
it guesses correctly most of times, it may also fail.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Grid Max size</i>&quot;. This is the maximum size in Mb that a grid can have and be 
held on the computer's memory. The advantage of having your data in memory is 
speed on processing. This doesn't mean that larger grids/images cannot be 
processed. It only means that if they are larger than this value, they will be 
re-read from disk whenever necessity demands. It is up to you (based of course 
on the computer capabilities) to decide on a reasonable value for this 
parameter. Grid size is computed in the following way: n_rows <i>x</i> n_columns
				<i>x</i> 4 / (1024*1024). Note: analpha-beta 0.6 version now does most of its 
				heavy computation with external MEX files that use single 
				precision arithmetic's. 
However, some operations may still be done 
with Matlab operators which imply double precision (in this case it takes twice 
as much memory). When 
you are using image files, however, this rule does not apply anymore. In fact there is no 
obvious rule because you may be using compressed or non-compressed images.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Swath ratio</i>&quot;. When doing a multibeam planning we always have to know the 
swath width coverage as a function of the water depth. When you start the first 
track, a question will be made if you accept this value or want to change it. 
Subsequent tracks won't ask it again, so if you want to change it in the middle 
of a planning session, you have to come here.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Measure unites</i>&quot;. When computing distances that's the result is 
presented in the chosen unit. Available options are: nautical miles, kilometers, 
meters and user (it means I don't know what are these).</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Default 
				ellipsoide</i>&quot;. Mirone now uses a routine that computes 
distances on a ellipsoidal Earth. It's author (which I could not identify on the 
comment section of vdist.m) claims that the computation is accurate &quot;... to 
within a few millimeters of accuracy using Vincenty's algorithm&quot;. Among the 
various ellipsoids you will also find one for Mars. Don't forget to select this 
when working with MOLA grids.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Working directory</i>&quot;. To reduce the cumbersome task of browsing trough the 
directory tree every time you need to save a file, the program uses a default 
working directory. You may either write the full path here or press the side 
button and select one within the selecting window that will open. Besides this 
mechanism, the program also remembers the last directory used to open a file and 
will use it as a first guess for the next time you need to open another file.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>New grids in new window</i>&quot;. This 
				gives you the choice of 
automatically open a computed grid in a new Mirone's window (if the option 
is checked) or to save the result on a disk file. Note that the default mode 
will also let you save you new grid (see Save option bellow).</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Default line thickness</i>&quot;. Use this default value for drawing lines, circles 
or other graphical elements.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">- &quot;<i>Default line color</i>&quot;. Use this default value for drawing lines, circles or 
other graphical elements (such as text strings).</span></p>
			</blockquote></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>New empty window</b> - Opens a new empty Mirone window 
from where you can open another file. You can obtain the same result by clicking 
on the first icon of Mirone's Tool bar.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Background window</b> - Allows you to load a background 
map selectable from those available with the program. You can either select a 
tile of the world map or the whole world. The selection is carried <i>via</i> a 
window tool. You can also select a blank map, for which the corner coordinates 
will be asked.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Open Grid/Image</b> - Select the type of file you want 
to open from the available options. Those options are gmt grids and a subset of 
the GDAL supported formats. Excluded from GDAL formats are those that deal with 
satellite images (they are quite complicated to manipulate and potentially very 
big). New in 0.6 is the possibility of reading MOLA (Mars grids) files. Also 
Surfer 6 binary grids are detected automatically.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Open Session</b> - Open a previously saved session (see 
below the <b>Save Session</b>).</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save Image As...</b> - Saves the current display image 
into one of the common image formats (e.g. jpg, tiff, bmp, etc...). Notice that 
graphic elements (e.g. lines) are not saved. Only the image is (but see <b>Export</b>).</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save As GMT grid</b> - When you imported a Digital 
Terrain Model (or whatever function is represented in the grid) in a format 
other than the GMT format (e.g. a GTOPO30 file), you can use this option to save 
that grid as GMT grid (netCDF). Note that you cannot use this option to save an 
image of other type.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save As 3 GMT grids (R,G,B)</b> - Decompose the color 
image into 3 components, Red, Green &amp; Blue and save each of these components 
into a GMT grid file. The output name is used as a template to which the _r, _g 
&amp; _b strings are appended in order to identify the individual color components. 
This option is extremely useful with GMT4 version, for it will allow 
transforming any image into GMT grids. You can than (for example) drape 
satellite images over DTMs, use the alternate illumination algorithms, etc... 
There are two options on how to save. <b>Image only </b>will save only the image 
and ignore all graphic elements that may have been added. It will also create 
grids that have the same number of rows and columns as the original file (be it 
a grid or an image). <b>Screen capture</b> saves the image, and everything that 
may have been added to it, by doing a screen capture. The final image size is 
unknown to me for it's done by an undocumented&nbsp;Matlab function.</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save As Surfer 6 
			grid</b> - Saves the current grid (not images) in the Surfer 6 
			binary grid format. Note, however, that surfer 6 grids are 
			automatically detected upon reading and will be save on this format 
			even this option is not selected.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save as GeoTIFF</b> - Saves the current image 
		as a GeoTIFF file.<b> Image only</b> means that only the image is saved 
		(no graphic elements) whereas <b>Screen capture</b> will do what it says 
		capturing also all elements present in the image. Note, the GeoTIFF file 
		size may differ considerably between these two options.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save as Fledermaus object</b> - Grids (with 
		what ever they contain) may be saved as IVS objects. These include a 
		.geo&nbsp; a .dtm .shade which are the basic blocks of a .sd object. 
		This later may be viewed with the iview3d free Fledermaus viewer.
			<a href="http://www.ivs.unb.ca/">Fledermaus</a> is a fantastic 3D 
		software (probably the best) and has a free viewer that can be 
		downloaded from <a href="http://www.ivs.unb.ca/products/iview3d/">www.ivs.unb.ca/products/iview3d/</a>. If you have it installed you can 
		either use this option to create a .sd file and separately run it with 
		the viewer or click the icon &quot;eye&quot; in the Tool bar which will do both 
		(but not save the .sd file). Note that large grids produce large .sd 
		files so if you don't have that much RAM (or you want to save the .sd 
		for later use) it may be better to use this save option.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Save Session</b> - Saves the current state of your 
work, including all (well, most of all) graphic (drawing) elements into a matlab 
.mat file. Selecting <b>Open Session</b> resumes the saved session. Very useful 
for backups. Notice that the grid file is not stored but only the information 
needed to reconstruct the image. So if the original grid is not found you cannot 
resume your session. This functionality is not up-to-date with the latest added 
options (e.g. drawing Euler pole circles) and cannot be used with other images 
than those derived from gmt grids.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Export</b> - Do a screen capture and save it into one 
of the common image formats. This differs from <b>Save Image As</b> where 
graphic elements (e.g. lines) are not saved. The image size is (un)determined by 
the same unknown mechanism mentioned in <b>Save As 3 GMT grids (R,G,B)</b></span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Print Setup</b> - Configure your printer to receive 
output from Mirone.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Print </b>- Spend 
			lots of money in color cartridges.</span></p></li>
		</ul>
<hr>

<p><span lang="en-gb"><font size="4"><a name="IMAGE">IMAGE</a></font></span></p>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Image Info</b> - Provides info about the current image. 
If the image is derived from a gmt grid the output is the one issued from 
grdinfo. If it is a common format image, the info includes only the number of 
rows and columns of the image and if it is a true color image (rgb) or an 
indexed image. If the image was read by the GDAL interface, a more extended info 
is provided (uses the output of gdalinfo).</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Color Palettes</b> - Opens a window tool from where you 
can select between more than 50 color tables. Every selection takes place 
immediately.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Show Palette</b> - Shows the color palette of the 
currently displayed image (rather pedestrian)</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Crop</b> -&nbsp; Crops an image to a specified 
rectangle. Press the left mouse button and drag to define the crop rectangle. 
Finish by pressing the left mouse button again.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Flip</b> -&nbsp; Flips the image UP-Down or Left-Right. 
Note: coordinated (georeferenced) images are displayed with origin at lower left 
corner and plain images with origin in upper left corner. Some operations like 
referencing or draping require knowing where to flip or not one image with 
respect to the other. Although I try to keep trace of this, sometimes I get 
caught in an unexpected case, and the result is upside-down. Use this option if 
that happens.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Histogram Equalization 
			(image)</b> - Enhances the contrast of 
images by transforming the values in an intensity image, or the values in the 
colormap of an indexed image, so that the histogram of the output image 
approximately matches a flat histogram. This operation works pretty well for black 
and white images but give somewhat idiot results for color images. The reason 
relies on the fact that for color images each color band is independently 
equalized and then a color image is rebuilt. I know that's not the way the thing 
should be done, but the correct operation (which is followed in <b>Region-Of-Interest</b>) is very slow and memory consuming. When an image is 
equalized, the original image is saved in memory and selecting this operation 
again restores that original image. This can be used for undoing other image 
operations (like illuminations).</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Histogram Equalization 
			(grid)</b> - Follows the same strategy as in the grd2cpt GMT 
			program. Here, I calculate a new color palette based on the grid's </span>
			cumulative distribution function (CDF). One basic difference 
			regarding the image histogram equalization option is that it 
			operates directly on the grid values, and not on the derived image. 
			That means NaNs are ignored and won't affect the final result 
			(contrary to the image version). On the other hand, the end result 
			is often not so nice - possibly because I'm not doing it correctly.</p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Illuminate</b> - Provides alternate schemas (to the GMT 
ones) to do image illumination. A window tool allows selection of inclination 
and azimuth of the light source. Among the available options, the <b>False Color</b> 
lets you illuminate a gmt grid along three different directions and compose the 
final image with each illuminated direction in the three color channels (R,G and 
B). This is useful for enhancing structures perpendicular to each of the 
selected direction.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Anaglyph</b> - Produces an image that, when seen with 
red-blue glasses, gives a 3D perception view.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Drape</b> - For having access to this option you need to 
have two Mirone windows opened. Then, the image of the second opened window can 
be draped on the first one. If the fist image results from a grid you can 
still elaborate (complicate) more by applying an illumination. That illumination 
will change the Hue (from the HSV model) of the first image. Finally, this image 
can be saved with the <b>Save As 3 GMT grids (R,G,B)</b> option. Imagine that 
the first image was obtained from loading a gmt grid DTM model and the second 
represents a satellite image (or aerial photograph) of the SAME region. At the 
end you will have the gmt grid and the draping image split into three RGB 
grids. You can then use GMT4.0 to drape the three grids version of your photo 
onto the DTM. Notice that the image quality will be degraded to fit the DTM 
resolution. This option is also useful if you want to drape an image on a DTM 
before computing a Fledermaus object. A good example is to drape a backscatter 
image (preferable pos-processed with the ROI options) over a multi-beam 
bathymetry.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Map Limits</b> - When you have a non referenced image 
(a scanned image for example), use this to set the image coordinate limits. A 
better way of doing this is provided by the option<b> Register Image </b>available by right mouse clicking onto rectangle elements.</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Activate Zoom</b> - Zoom in and out. When zoom is on, 
click the left mouse button to zoom in on the point under the mouse. Click the 
right mouse button to zoom out. You can also click and drag to zoom into a 
rectangular area. (This is much easily accomplished by clicking on the zoom icon 
button)</span></p></li>
		</ul>
<hr>
<p><span lang="en-gb"><font size="4"><a name="TOOLS">TOOLS</a></font></span></p>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Extract Profile</b> - On a gmt grids left click, drag 
and left click again. As result a new window will pop up with an&nbsp; <i>x,y</i> 
plot containing the profile extracted from the grid along the drawn track. This 
corresponds to an interactive version of the grdtrack gmt program. The profile 
thus obtained can be saved to disk. Note that the <i>x,y </i>profile coordinates 
are obtained from linear interpolation and by consequence on geographic grids 
they may differ reasonably from the great circle arcs that reflect the shortest 
distance on a sphere between the end points. </span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Measure </b>- This is a measure tool that allows 
measuring distances (in units selected in <b>Preferences</b>), azimuths in degrees (cw 
from north) and area (in km2). Start by a left 
clicking and proceed with as many left clicks as you want. A double-left click 
adds the last point and shows up the results. Right clicks remove the previously 
entered point.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Multi-beam planning</b> - This tool is meant to help the 
planning of multi-beam surveys. Various systems have different swath widths 
coverage that depends on the number of beams of the particular system and the 
water depth. For simplicity the bottom coverage can be assumed to be a relation 
of the water depth. Hence, a &quot;swath-width / water depth ratio&quot; of 2 means that 
on a 4 km water column the swath will have a width of 8 km. The facilities 
provided are:</span></p>
			<blockquote>
				<p style="margin-bottom: 5px"><span lang="en-gb">a) Start a new track. In this mode left-clicks add new points; right-click or 
pressing the delete or back space remove previous points. Pressing RETURN, ENTER 
or middle button click ends the track and asks for a file name to save the track 
on disk.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">b) Imports a track from a (x,y) file on disk.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">c) Edit a track. In this mode the first left-click selects the track to be 
edited. The second selects&nbsp; the closest vertex that can now be moved and 
place into a new position by another left-click. However, while in the edit 
mode, pressing the &quot;r&quot;, DELETE or BACKSPACE keys will remove the vertex; 
pressing &quot;i&quot; will insert a new vertex; pressing the &quot;b&quot; key will break the 
track in two. RETURN or left-click stops the edit mode.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">d) Delete a track. Use left-click to select the track and right-click to 
confirm.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">e) Save the track on disk. Use left-click to select the track and right-click 
to confirm.</span></p>
				<p style="margin-bottom: 5px"><span lang="en-gb">f) Compute the track length in Nautical Miles. Calculus is made using great 
circle distances and spherical Earth approximation.</span></p>
			</blockquote></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Region-Of-Interest</b> - Use left mouse clicks to draw 
a closed polygon. A double left click ends the polygon drawing. Then you can 
select from a list of image processing operations that will be applied only 
inside the ROI polygon. Those operations work pretty well for grey images but 
regarding color images they may be very slow. That happens because the whole 
color image has to be transformed into an intensity  space (YIQ in current 
case) and back to RGB, and those are  slow operations and VERY memory demanding as far as Matlab is 
respected. So, even if you start with an indexed image you'll end up with a true 
color (RGB) image.</span></p></li>
		</ul>
<hr>
<p><span lang="en-gb"><font size="4"><a name="DRAW">DRAW</a></font></span></p>
<p><span lang="en-gb">NOTE: All graphic elements drawn with the options in this menu are given a 
lot of properties that include changing the line style, color, thickness, 
editing, deleting and so on. For accessing to these properties just right click 
on the selected element and choose what you want to do.</span></p>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Draw line</b> - Use left mouse clicks to draw the line 
(in fact a polyline) and stop with a double left click. You can use these line 
to extract a profile from the grid (if it is the case) where it was drawn.</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Import line</b> - Prompts for a file name of an 
			<i>x,y</i> 
ascii file that will be drawn as a line on the current figure. That line will be given the 
same properties as the natively drawn lines.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Import points</b> - Prompts for a file name of an 
			<i>x,y</i> 
ascii file that will be drawn as individual points on the current figure. Points will be given the 
same properties as the natively inserted symbols.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Edit line (old 
			style edit)</b> - Allows you to edit certain lines previously 
drawn (as is the case of multi-beam tracks). For that you have to select the desired line by left 
clicking on it and you are immediately on the edit mode. The closest vertex to 
the clicking point is selected and moving the mouse is all it needs to move that 
point. The next left click fixes the moving point. Other left mouse clicks (on 
the line of course) repeat the process for other vertices. A right click stops 
the editing operation. See the <b>Multi-beam planning</b> for key presses that 
add extra functionality to the editing. Alternatively, you can use the Windows 
style mode of editing which consists on double-click to start the edit mode, 
drag and drop to move the point/vertex, and double-click again to quit editing. 
Like in the other mode, vertices can be removed or inserted and lines can be 
broken into two segments or closed to form a closed polygon. The difference is 
			that you MUST PRESS THE SHIFT KEY while you inserting/removing 
			vertexes. Both mechanisms are 
available because depending on the circumstances one may be better than the 
other.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Draw closed polygon</b> - It works 
			much like in&nbsp; 
			<b>Region-Of-Interest</b> except that (1): you are not prompted to do any other 
operation. However, the same ROI operations are available by right 
clicking on the ROI polygon. (2): You can use the polygon to do an alternative 
			&quot;Crop Grid&quot;. The croping rectangle is defined by the x,y polygon min 
			and max limits, and the grid nodes outside the polygon are set to a 
			constant value prompted to user.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Draw circle</b> - Draw circle lets you draw small 
circles in geographic coordinates (or plain circles with cartesian coordinates). The 
			three 
sub-options available are <b>Geographical Circle</b> where the first left click 
defines the circle center and the second a point in the perimeter. Meanwhile, 
moving the mouse draws the circle on the fly. The second sub-option <b>Circle 
about an Euler pole</b> lets you select the circle's center from a relative (or 
absolute) Euler pole, selectable from the popup menus in the window that will be 
opened. Once you made your pole choice, the center is already defined and you 
only have to give another left click to select  a point on the perimeter. 
Now, if you want to change the circle's radius or move it double click on the 
circle. The center (if visible on the figure) is shown by a red star. Click and 
drag to move the circle. The radius can be changed by click and dragging the red 
circle on the perimeter. These and other settings may be also done in the 
parameter window that has meanwhile shown up. Double clicking again removes the 
circle's editing properties. If the circle is of the <b>Circle about an Euler 
pole</b> type, right clicking lets you choose to calculate the Euler velocity on 
the point where the red circle is displayed. The third sub-option lets you draw 
			a <b>Great circle arc</b>.</span></p></li>
			<li>
			<p style="margin-top: 0; margin-bottom: 5px"><span lang="en-gb"><b>Draw rectangle</b> - Works 
pretty much 
in the same way as 
the circle's case, except that the given properties are different. You can now 
crop images and/or grids, change/move the rectangle and so on. Relatively hidden 
in these properties is the possibility of using the rectangle coordinates to 
register an image. This is more correct and gives more freedom to the user than 
the <b>Map Limits</b> option. The rectangle corner coordinates are used to 
compute an affine transformation that registers the image to the rectangle's 
coordinate system. To compute an affine transformation we need at least 3 points. 
With the rectangle we have 4, which is ok but imposes the unnecessary (to the 
affine transformation) restriction that the points lay on a rectangle. In fact, 
if you edit and change the rectangle to another shape, the registration option 
will no longer be available. I intend to change that, but it will require 
writing a new graphical tool specific for the purpose.</span></p></li>
		</ul>
		<blockquote>
			<p style="margin-top: 0; margin-bottom: 5px"><span lang="en-gb">From the rectangle 
properties you can also select the <b>Transplant Image here</b>. This is a 
non-finished tool that allows selecting a second image that will be inserted 
inside the area enclosed by the rectangle. In its current state, the second image 
is always reinterpolated to fit the space (in terms of rows and columns) inside 
the rectangle.</span></p>
			<p style="margin-top: 0; margin-bottom: 5px"><span lang="en-gb">The
			<b>crop tools</b> options provide useful options that apply only to 
			the grid elements contained in the rectangle. I wrote the <i>spline 
			smooth, median filter and fill gaps</i> having in mind post 
			processing of swath bathymetry grids. Mainly to disguise the region 
			of overlapping swaths. While this works pretty well (you may even 
			work on shaded illuminated images) it has also two drawbacks. One is 
			that it leaves a too clear suture zone between the processed and 
			non-processed zones. The other is that we clearly need here a &quot;undo&quot; 
			option. I have to work more on this.</span></p>
		</blockquote>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Draw vector</b> - Draws a vector by the same clicking 
sequence as above. However, this cannot be edited. Only deleted.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Insert symbol</b> - Filled circles, squares, triangles 
and stars are plotted by a left click. Right clicks on these elements lets you 
change size, fill and border color, select other symbols ...</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Insert text</b> - Left click for the point of text 
insertion and then write whatever you want. Left click (do not hit ENTER unless 
you want to change line) outside the text box to end. If you have previous line 
elements you will notice that they vanished when you started ton write your 
text. Don't worry, it's just an innocuous Matlab BUG (it has many). To get back 
all your stuff click on the refresh button (the one with two curved arrows) of 
the Mirone button collection. Text may be edited and moved or change the font, 
size, color by accessing its properties (again, right click on it).</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Contours (automatic)</b> - For grids, this 
automatically calculates and draws a set of contour lines.</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Contours</b> - 
			Raise an option window where you can select which contours to draw. 
			WARNING: not all eventual user wishes are foreseen (e.g. removing 
			contours from this window). That is very complicated to program, but 
			you can obtain the desired result with a combination of this window 
			option and right clicks on individual contour lines.</span></p>
			</li>
		</ul>

<hr>
<p><span lang="en-gb"><font size="4"><a name="DATASETS">DATASETS</a></font></span></p>

		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Draw coastline, Draw political boundaries, Draw rivers</b> - 
Use the netCDF gmt database. Depending on what you installed in GMT so you will 
access to the crude, low, intermediate or full resolution files. 
Needless to say that drawing coastlines will only work with geographic registered 
images.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Earthquakes </b>- Select earthquakes with magnitudes &gt;= 
5 for the period 1990-2003. Seismicity from the <a href="neic.usgs.gov">NEIC</a> 
web site.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Hotspot locations</b> - For those of you that are 
Hotspotist this option plots the (B. Steinberger, JGR, v105, p11127--11152, 2000) Hotspot locations list. Right clicking 
lets you ask for the ghost name.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Magnetic isochrons 
			</b>- Plots the Muller et. 
		all.
		<a target="_top" href="http://gdcinfo.agg.nrcan.gc.ca/app/agegrid_e.html">Digital 
			<b>Isochrons</b> of the World's Ocean Floor</a>. Right clicking 
		on individual isochrons provides a short info about it.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Volcanoes </b>- Plots the Smithsonian volcanic activity 
list. Again, right clicking on an event gives access to a short description of it.</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Plate Boundaries 
			</b>- Draws the P. Bird (<a href="element.ess.ucla.edu">element.ess.ucla.edu</a>) plate 
boundary list. Different boundary types are plotted with different colors. Right 
clicking on a boundary gives access to the boundary type, neighbouring plates 
and velocity across that boundary. I slightly changed the original file for the 
Açores Triple Junction region.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Cities </b>- Selects the 
			<b>Major cities</b> or <b>Other cities</b> to plot city places and names. I recovered these files from the 
iGMT distribution.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>ODP/DSDP sites 
			</b>- Plots either the ODP or the DSDP 
(or both) sites. Right clicking on a site lets you have access to minimalist 
site information.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Magnetic Bar Code 
			</b>- Opens a window with the Cand &amp; 
Kent (1993) Magnetic inversion time scale.</span></p></li>
		</ul>

<hr>
<p><span lang="en-gb"><font size="4"><a name="GEOPHYSICS">GEOPHYSICS</a></font></span></p>

		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Elastic deformation</b> - Here you can either import a 
line (or polyline) or draw it over your image grid. That line is than 
interpreted as a surface trace of a fault. Right clicking on the line will show 
(among others) two options to call new windows where you will specify the 
fault parameters (width, depth, dip) as well as the movement you will simulate. 
			The two available options are called <b>Okada </b>and <b>Mansinha.</b> 
			The <b>Okada </b>window is more general and here you can: modell co-seismic displacement - that can be compared 
with GPS measuring - for an initial condition of the far field tsunami modelling 
(see bellow) or to compute synthetic interferograms. The Okada window provides 
short help in the form of tooltips when the mouse rest a bit over individual 
entry boxes. For a complete reference you must read <font size="3">the RNGCHN 
paper (Feigl and Dupre 1999;Computers and Geosciences, 25 (6) pp. 695-704). The 
paper and the source code used to be available on authors ftp site but it seams to 
have vanished. The </font><b>Mansinha</b> option computes only the vertical 
			component of the deformation produced by an earthquake. The two 
			codes should produces equal results (and they very closely do). 
			There is, however, an important difference between the two regarding 
			how they treat grids in geographical coordinates. In <b>Okada</b>, 
			the geographical grid limits are converted to UTM. This is a bit 
			quick and dirty way of operation. Computing over large areas may 
			suffer from it and if user wants to be carefull, he must use a 
			cartesian grid. On <b>Mansinha</b>, all distances are computed by 
			previously projecting into a Transverse Mercator with origin in 
			fault's first point.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Tsunami Travel Time</b> - Computes the tsunami 
		travel time according to equation <i>v</i> = sqrt(<i>gH</i>), where <i>g</i> 
		is the gravity acceleration and <i>H</i> is the water column depth. To 
		use it, first plot the source location (note: you can give it an exact 
		location), than right click on the source symbol and select <i>Compute</i>. 
		That's all, depending on your grid size the result will appear 
			immediately or wait a bit.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Swan</b> - Use the Mader's swan code to model a 
		tsunami propagation. To use this program you need to have two grids that 
		are EXACTLY compatible. This means they must cover the same region and 
		have the same number of rows/columns. One of the grids represents the 
		bathymetry (z positive up) in meters and other contains the initial 
		deformation as produced by the <b>Okada deformation</b> module. The next 
		thing you need is a parameter file. In the &quot;data&quot; directory of the root 
		Mirone installation you will find a file named swan.par. Use this as an 
		example for your case. I don't know the purpose of most of the 
		parameters, only of those who seams to be important. The swan.par has 
		short comments in front of each parameter.</span></p></li>
		</ul>
		<blockquote>
			<p style="margin-bottom: 5px"><span lang="en-gb">Now that you are ready to do the simulation you have to choose 
		between computing the simulation on specific points - called maregraphs 
		here - or on the whole grid region. If you want the first option, than 
		you either plot those stations graphically (using the <i>Plot Stations</i> 
		option) or import a x,y file with the maregraphs location. This later 
		option is also available in the <i>swan_options</i> window. If you want 
		to compute the simulation in the whole region than proceed with the <i>Compute</i> option. In the 
			<i>swan_options</i> window you will finally 
		select what to do. The <i>Bat</i> and <i>Source</i> edit boxes must 
		contain either the name of your grids or a gray line with the <i>In 
		memory array</i> string, which appears when the Swan module was called 
		from a Mirone window in which a valid grid was previously loaded. In the
			<i>Params</i> edit box you load the swan.par parameter file mentioned 
		above. If you already plotted stations in the bathymetry window grid the
			<i>Maregraphs</i> section will be automatically set, otherwise check the 
		check box and give the necessary file names to compute the maregraphs (in 
		case you want to do it - not mandatory). Maregraphs are nothing but a 
		record of the water height <i>vs</i> time at a certain location(s). The
			<i>Output grids</i> check box tells the program that you want to write 
		grids on disk containing the water height at particular time intervals 
		of the simulation cycle. For example if in the swan.par <i>dt = 1</i> 
		and <i>cumint = 30</i> that means the simulation is computed at 
		increments of one second and grids (as well as maregraphs if that option 
		was selected) are written at every 30 seconds of the simulation. Grids 
		are automatically named after the name template provided in the edit box 
		appended with the cycle number. As an alternative to writing grids on 
		disk, you can compute an AVI movie. In <i>Nº of cycles</i> you select 
		for how many cycles will the simulation be run. Again, using the 
		same example of <i>dt = 1</i> the default value of 1010 means the 
		simulation will extend for 1010 seconds.</span></p>
			<p style="margin-bottom: 5px"><span lang="en-gb">I left behind on purpose the 
			<i>Plot satations on grid borders</i> <b>Swan</b> option. This option's purpose is meant only for using in the 
			<b>Tsun2</b> module (see bellow).</span></p>
		</blockquote>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Tsun2</b> - Use the Imamuras's tsun2 code to model a 
		tsunami inundation. Although the <b>Swan</b> code has an parameter 
		called <i>flooding </i>I don't know how to use it. Instead I use the 
		tsun2 code to compute the coastal flooding simulations. In order to 
		these simulations be realistic, they have to be run over small areas 
		described by very detailed DTMs that include both topography as well as 
		bathymetry data. The so called far field codes are not appropriate to 
		model coastal inundations and the shallow water models (like tsun2) use 
		such a small grid spacing that for the sake of running time is jus to 
			practicable to make them run since the earthquake epicenter until the 
		coast. The strategy is than to use a far field model to compute the 
		tsunami propagation using a coarse grid spacing (typically about 1 km) 
		until near shore and than use this simulation to feed a shallow water 
		code.</span></p></li>
		</ul>
		<blockquote>
			<p style="margin-bottom: 5px"><span lang="en-gb">The tsun2 code thus runs on a very fine grid mesh - with grid 
		spacing typically not superior to 50 meters - and must be feed at every 
		grid node of one or two of it's grids borders. The feeding procedure 
		consists in providing a maregraph record for all grid nodes of the 
		border(s) at which the external wave arrives at the finer grid. However, 
		as mentioned above, this is impracticable because it would imply running 
		an external feeding code (<b>Swan</b> in this case) at the same (very 
		fine) grid spacing as the fine grid. The solution adopted was than to 
		use finer grids that have grid node spacing that are sub-multiples of 
		the coarse grid. For example, dx = 50 m equals 1 km / 20. That way we 
		insure that every 20-th +1 finer grid node will coincide with one node 
		of the coarser grid. To complicate a bit more (but safer against 
			misalignments) it is desirable that the origin coordinates of the 
		finer grid coincide with those of one node of the coarser grid. With 
		these conditions meat, feeding all grid nodes of the finer grid is 
		simply accomplishing by linear interpolation of the water height using 
		data at nodes actually feed by the far field code (one every 21 in the 
		example above). It is a user task to construct such a pair of 
		coarse/fine grids using a cartesian coordinate system (e.g. UTM).</span></p>
			<p style="margin-bottom: 5px"><span lang="en-gb">It is now that the 
			<i>Plot satations on grid borders</i> option in<i> </i><b>Swan</b> 
			comes handy. By selecting this option the finer grid is 
		loaded and all its grid nodes around the four borders will be plotted on 
		the figure derived from the coarse grid (if you doubt it, zoom in until 
		you are convinced). Here a previous knowledge of the direction from 
		which the tsunami arrives is required. Remove the borders at which the 
		tsunami cannot arrive (that is, without crossing the smaller area). That 
		will leave you with at most two frontiers. Now run <b>Swan</b> and save 
		the maregraph file. That file is the one you need to feed in the <b>Tsun2</b> module, but before you can run it there is still one last 
		step. Select <i>Write params file</i> in <b>Tsun2</b> entry and save a 
		new parameter file (this time for <b>Tsun2</b>). This file contains 
		indexes information used to translate the maregraph file created by <b>Swan</b> into 
			coordinates of the finer grid used in <b>Tsun2</b>. 
		Selecting <i>Compute</i> popups an option window very similar to the 
		Swan's options window. In fact it contains only one extra option which 
		is <i>Jump initial</i>. Leave the mouse pointer on it and the tooltip 
		should be self-explanatory.</span></p>
		</blockquote>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>IGRF calculator</b> - Calls a IGRF calculator tool where 
		you can compute the value of the total magnetic field (or its 
		components) either on a given point, generate a grid of regularly spaced 
		magnetic quantities or read a file with at least lat, long positions. 
		When used to import a file, a new window pops up where you select which 
		data column means what. You have here the possibility to choose to 
		compute the magnetic anomaly (measured total field - igrf magnitude). 
		Computing magnetic anomaly requires knowing the date of measuring. The 
		reading file function has the ability to decode many date formats 
		(that's why it may be a bit slow to read large files) including text 
		formats. Hit the &quot;?&quot; button for help in text date formats. The IGRF 
		models included in 0.6 version span for the 1945-2000 as DGRF models and 
		the IGRF2000 for the 2000-05 period.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Parker direct, Parker inversion and Reduction 
		to the Pole</b>- are standard procedures used in magnetic field 
			modelling. It is out of scope of this document to explain the principles 
		behind those methods. Either you know them and than the use of these 
		modules should be pretty obvious or you don't. If you do not know and 
		want to learn, I suggest you start by reading the 
			<a href="pangea.stanford.edu/~blakely/potential.html">Blakely</a> textbook. The 
			credit to this modules goes mainly to M Tivey for I used functions 
			from his magnetic toolbox as backbones to write them.</span></p>
			</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Plate Calculator</b> - Opens a window tool from where 
you can calculate plate velocities according to the available models (e.g. 
NUVEL1A, REVEL, DEOS2K). It has a help of its own.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Geographic calculator</b> 
			- This tool is an interface to both mapproject and grdproject. It 
			uses a &quot;mexified&quot; version of these programmes and its use should be 
			so trivial that no help is needed (well, for users that know what 
			they are doing). GMT4 introduced datum conversions in mapproject 
			(but not in grdproject) and shifts that allow conversion between the 
			plethora of projection systems used all over the world. In version 
			0.6 I coded only the Portuguese systems. I hope in this way to 
			contribute to end the &quot;state top secrete&quot; issue that seams to exist 
			around this matter (if you are Portuguese and need to do coordinate 
			conversions from/to national systems I'm sure you understand what I 
			mean). For other countries, I still need to invent a way to allow 
			them to define their projection systems. Overall, this tool frees 
			GMT users from the need to provide a correct -<b>R</b> (potentially 
			particular hard to know in advance in inverse transformations), 
			which need I never understood and prevented many users (me included) 
			to be able to use grdproject.</span></p></li>
		</ul>

<hr>
<p><span lang="en-gb"><font size="4"><a name="Grid Tools">Grid Tools</a></font></span></p>

<p><span lang="en-gb">This section contains excerpts of the GMT manual for the 
following three programmes. More detailed information must be seek on the 
corresponding html man page.</span></p>
		<ul>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>grdfilter</b> -
			</span>will&nbsp; filter a grid in the time domain using a boxcar, 
			cosine arch, gaussian, median, or mode filter and&nbsp; computing&nbsp; 
			distances using Cartesian or Spherical&nbsp; geometries. The output 
			can optionally be generated as a sub<b>-</b>region of the input 
			and/or with a&nbsp; new increment.&nbsp; In&nbsp; this way, one may 
			have &quot;extra space&quot; in the input data so that the edges will not be 
			used and the output can&nbsp; be&nbsp; within&nbsp; one-half-&nbsp; 
			width&nbsp; of&nbsp; the&nbsp; input edges. If the filter is 
			low-pass, then the output may be less frequently sampled than the 
			input.</li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>grdgradient</b> - 
			may be used to compute the directional derivative in a given 
			direction, or the direction [and the magnitude] of the vector 
			gradient of the data. Estimated values in the first/last row/column 
			of output depend on boundary conditions.</span></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>grdproject</b> 
			- Interface to grdproject (see <b>Geographic calculator</b>).</span></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>grdsample</b> - 
			</span>interpolates a grid to create a new grid with either: a new 
			grid-spacing, or number of nodes, and perhaps also a new sub-region. 
			Interpolation is bicubic [Default] or bilinear and uses boundary 
			conditions. <b>grdsample</b> safely creates a fine mesh from a 
			coarse one; the converse&nbsp; may suffer aliasing unless the data 
			are filtered using <b>
			<a href="../../progs_interix/GMTdev/GMT/www/gmt/doc/html/grdfilter.html">
			grdfilter</a></b>.</p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>grdtrend</b> 
			reads a 2-D gridded file and fits a low-order polynomial trend to 
			these data by [optionally weighted] least-squares. The trend surface 
			is defined by:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m1 + m2*x + m3*y + m4*x*y + m5*x*x + m6*y*y 
			+&nbsp; m7*x*x*x&nbsp; +&nbsp; m8*x*x*y&nbsp; + m9*x*y*y + 
			m10*y*y*y.<br>
			The user must specify <i>n</i><b>_</b><i>model</i>, the number of 
			model parameters to use;&nbsp; thus, <i>3</i> fits a bilinear trend,
			<i>6</i> a quadratic surface, and so on. Optionally,&nbsp; select&nbsp; 
			to perform a robust fit. In this case, the program will iteratively 
			reweight the data based on a&nbsp; robust scale estimate, in order 
			to converge to a solution insensitive to outliers. This may be handy 
			when separating a &quot;regional&quot; field from a &quot;residual&quot; which should 
			have non-zero mean, such as a local mountain on a regional surface. 
			If data file has values set to NaN, these will be ignored during 
			fitting; if output files are written, these will also have NaN in 
			the same locations.</span></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Clip grid</b> - This corresponds to an interactive 
version of the grdclip gmt program. Shortly, values above &quot;Above value&quot; or below 
&quot;Below value&quot; are set to a desired value (including NaNs).</span></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Crop Grid</b> - On 
			images derived from grids left click, drag 
and left click again. The rectangle thus defined is used to extract a subset of 
the original grid. This corresponds to an interactive version of the grdcut gmt 
program with the advantage that you will not fall onto the grips of the 
			<font color="#FF0000">&quot;<b>Ivan 
the Terrible</b>&quot; (I mean the despairing message: GMT ERROR: (x_max-x_min) 
			must equal (NX + eps) * x_inc), where NX is an integer and |eps| &lt;= 
			0.0001)</font></span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Spline Smooth</b> - Uses cubic splines to smooth a 
grid. The important step in smoothing is the value of smoothing parameter. The 
smoothing parameter (p) determines the relative weight you would like to place 
on the contradictory demands of having <i>f</i> be smooth <i>vs</i> having <i>f
			</i>be close to the data. For p = 0, <i>f </i>is the least-squares straight line 
fit to the data, while, at the other extreme, i.e., for p = 1, <i>f </i>is the 
variational, or 'natural' cubic spline interpolant. As p moves from 0 to 1, the 
smoothing spline changes from one extreme to the other. The interesting range 
for p is often near 1/(1+h^3/6), with h the average spacing of the data sites, 
and it is in this range that the default value for p is chosen. For uniformly 
spaced data, one would expect a close following of the data for p = 1/(1+h^3/60) 
and some satisfactory smoothing for p = 1/(1+h^3/0.6). You can input a p &gt; 1, 
but this leads to a smoothing spline even rougher than the variational cubic 
spline interpolant.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>SDG </b>- SDG stands for Second Derivative in direction 
of Gradient. It is a very interesting operator, particularly to people working in 
the UNCLOS margins extension program. Shortly, it is the UN recommended&nbsp; 
algorithm to determine the Foot Of continental Slope (FOS). Even if you don't 
know what I'm talking about, this operator worth trial because it has the 
ability to reveal very concealed trends in your data. It also depends on the 
smoothing parameter p as the previous option.</span></p></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Terrain modelling</b> - In this section, the slope 
(either in degrees or percentage), aspect (that is the azimuth of the slope) and 
first and second directional derivatives of geographical referenced grids 
can be computed.</span></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>Interpolate</b> 
			- Interpolate scattered x,y,z triplets into a regular grid array. 
			Available options are GMT's surface and nearneighbor methods. 
			Consult the corresponding GMT man pages for any droughts regarding 
			these methods. Use should be obvious for anyone knowing what they 
			are trying to do.</span></li>
			<li>
			<p style="margin-bottom: 5px"><span lang="en-gb"><b>SRTM tools</b> - 
			With the SRTM mosaic tool you can draw a rectangle an select an 
			interest region. Right click on the rectangle and choose <i>mesh</i>. 
			This will draw yellow quadrangles corresponding to possible SRTM 
			tiles. Now a mouse click on each individual square will search on 
			the previously selected working directory for existing SRTM files 
			(that may be ziped). If the matching file does exists the square 
			will turn red, if it doesn't a warning message is displayed during a 
			second and the square will return to yellow. The <i>find holes</i> 
			option will automatically detect regions of no data values (holes) 
			and draw rectangles around them. Right click on those rectangles an 
			select the options under <i>crop tools</i> to fill the holes. At the 
			end the processed file may be saved back into the SRTM format.</span></li>
			</ul>
<hr>
<p><span lang="en-gb"><font size="4">Now: Many of these features are easier to access either by left 
click on the programs icons, or by right click on them to select the associate 
options.</font></span></p>
<hr>
<p><span lang="en-gb"><font size="4"><a name="INSTALLATION">INSTALLATION</a></font></span></p>
<p><span lang="en-gb">First, you have to install GMT. This as difficult as to 
download the setup <a href="ftp://ftp.ualg.pt/users/jluis/m_gmt/GMT4.0setup.exe">
HERE</a> and click next to all options.</span></p>
		<p><span lang="en-gb">Mirone is distributed in both source code and a Windows compiled stand-alone 
version. Incredibly as it might seam, the source code version is faster than 
its compiled counterpart. The condition is that you have Matlab 6.5 version (or 
higher - tough it's highly questionable whether R14 is a better product). To run it from Matlab, unzip (or untar) the code source 
to wherever directory you want. Within Matlab change to that directory and 
write &quot;mirone&quot; (without the &quot;) on the command prompt. This, however, is a 
wasteful way of doing things. The point is that Matlab with its Java interface 
consumes a lot of computer memory and has a lousy memory management capacity (I 
mean, and sustain, it doesn't free all memory after use). A better way is if you 
start Matlab with the -nojvm option. This saves a lot of computer resources. See 
the instructions on the startup.m file that you'll find on the Mirone's 
installation directory for how to create a desktop icon to do this automatically. 
Nothing of the previously said implies dependency to a particular Operating 
System, so Mirone should run equally in Windows or Unix/Linux or Mac OS X. However, in order 
to run it in non-Windows platforms, a bunch of mex files have to be compiled for that system. The GDAL library it 
self must be installed. The <i>mex</i> files can be built from the 
files 
that is installed under the &quot;mex&quot; directory of the root's Mirone directory. 
Regarding instructions on how to compile them under other OSs the most I can 
help you right now is, see the </span>make_mexs.m file<span lang="en-gb"> and 
try to adapt it to your environment.</span></p>
<p><span lang="en-gb">On the other hand, the compiled version works only in Windows. It is provided 
as a <a href="ftp://ftp.ualg.pt/users/jluis/m_gmt/MIRONEsetup.exe">setup.exe</a> file where you only have to say &quot;yes&quot; to most of the questions. 
At the end you will have two more icons on your desktop. One for Mirone and the 
other for M_GMT. If, however, you decided to not accept the proposed destination 
directory, you will have to edit the mirone.bat (and m_gmt.bat if you want to 
use this as well) in order that the PATH variable reflects where you did install 
the program. If you don't do this correctly, the program won't work by the simple 
reason that it doesn't know where it is. A final note to user that like to 
install their programs in directories with blanks on their names. Simply DO NOT 
DO IT, first it's a very bad habit (I know that B. Gaitas Inc induce you to do 
so) and concerning Mirone you will very very soon run into troubles</span>.</p>
		<p style="margin: 1px 5px; ">&nbsp;</td>
	</tr>
	</table>

</body>

</html>