function varargout = draw_scale(varargin)
% command line arguments to draw_scale

%	Copyright (c) 2004-2012 by J. Luis
%
% 	This program is part of Mirone and is free software; you can redistribute
% 	it and/or modify it under the terms of the GNU Lesser General Public
% 	License as published by the Free Software Foundation; either
% 	version 2.1 of the License, or any later version.
% 
% 	This program is distributed in the hope that it will be useful,
% 	but WITHOUT ANY WARRANTY; without even the implied warranty of
% 	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
% 	Lesser General Public License for more details.
%
%	Contact info: w3.ualg.pt/~jluis/mirone
% --------------------------------------------------------------------
 
	hObject = figure('Vis','off');
	draw_scale_LayoutFcn(hObject);
	handles = guihandles(hObject);
	move2side(hObject,'right')

	handles.command = cell(20,1);
	handles.command{5} = '-L';

	guidata(hObject, handles);

	set(hObject,'Visible','on');
	% UIWAIT makes draw_scale_export wait for user response (see UIRESUME)
	uiwait(handles.figure1);

	handles = guidata(hObject);
	if (nargout),	varargout{1} = hObject;		end
	delete(handles.figure1);

function mutual_exclude(off)
	set(off,'Value',0)

function clear_editBox(clean)
% Just clean what might be inside an edit box
	set(clean, 'String', '')

function edit_XposLongitude_CB(hObject, handles)
	xx = get(hObject,'String');
	if isempty(handles.command{6}) && (str2double(xx) > 360 || str2double(xx) < -180)
		errordlg('Don''t push your luck. Enter longitude in the range (-180,180) or 0-360','Error')
		set(hObject, 'String', '');    handles.command{8} = '';
		return
	end
	handles.command{8} = xx;
	handles.command{9} = '/';     handles.command{11} = '/';    handles.command{13} = '/';
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function edit_YposLatitude_CB(hObject, handles)
	xx = get(hObject,'String');
	if isempty(handles.command{6}) && (str2double(xx) > 90 || str2double(xx) < -90)
		errordlg('Don''t push your luck. Enter latitude in the range (-90,90)','Error')
		set(hObject, 'String', '');    handles.command{10} = '';
		return
	end
	handles.command{10} = xx;
	handles.command{9} = '/';     handles.command{11} = '/';    handles.command{13} = '/';
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function edit_LatitudeOfScale_CB(hObject, handles)
	xx = get(hObject,'String');
	if (str2double(xx) > 90 || str2double(xx) < -90)
		errordlg('Either you are experimenting or a little ignorant about Earth coordinate systems','Error')
		set(hObject, 'String', '');    handles.command{12} = '';
		return
	end
	handles.command{12} = xx;
	handles.command{9} = '/';     handles.command{11} = '/';    handles.command{13} = '/';
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function edit_LengthOfScale_CB(hObject, handles)
	xx = get(hObject,'String');     handles.command{14} = xx;
	handles.command{9} = '/';     handles.command{11} = '/';    handles.command{13} = '/';
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function check_Fancy_CB(hObject, handles)
	if get(hObject,'Value')     handles.command{7} = 'f';
	else handles.command{7} = '';    end
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function popup_ScaleUnities_CB(hObject, handles)
	val = get(hObject,'Value');     str = get(hObject, 'String');
	switch str{val};
		case 'miles'
			handles.command{15} = 'm';
		case 'nautical miles'
			handles.command{15} = 'n';
		otherwise
			handles.command{15} = '';
	end
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function radio_GeogUnities_CB(hObject, handles)
	if get(hObject,'Value')
		mutual_exclude(handles.radio_PaperUnities)
		handles.command{6} = '';
	end
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function radio_PaperUnities_CB(hObject, handles)
	if get(hObject,'Value')
		mutual_exclude(handles.radio_GeogUnities)
		handles.command{6} = 'x';
	end
	set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
	guidata(hObject, handles);

function radio_decimal_CB(hObject, handles)
	if get(hObject,'Value')
		mutual_exclude([handles.radio_DegMin,handles.radio_DegMinSec])
	end

function radio_DegMin_CB(hObject, handles)
	if get(hObject,'Value')
		mutual_exclude([handles.radio_decimal,handles.radio_DegMinSec])
	end

function radio_DegMinSec_CB(hObject, handles)
	if get(hObject,'Value')
		mutual_exclude([handles.radio_decimal,handles.radio_DegMin])
	end

function edit_ShowCommand_CB(hObject, handles)
% Nothing to do. Just echo the GMT command.

function push_Cancel_CB(hObject, handles)
	handles.output = '';        % User gave up, return nothing
	guidata(hObject, handles);
	uiresume(handles.figure1);

function push_OK_CB(hObject, handles)
	xx = get(handles.edit_ShowCommand, 'String');
	if strfind(xx,'//') || strfind(xx,'///')
		errordlg('You didn''t fill all mandatory fields','Error')
		return
	end
	if isempty(handles.command{6}) && (str2double(handles.command{8}) > 360 || str2double(handles.command{8}) < -180)
		errordlg('You probably played arround with your mouse and left an inconsistent value for the longitude Scale Bar position','Error')
		set(handles.edit_XposLongitude, 'String', '');    handles.command{8} = '';
		set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
		return
	end
	if isempty(handles.command{6}) && (str2double(handles.command{10}) < -90 || str2double(handles.command{10}) > 90)
		errordlg('You probably played arround with your mouse and left an inconsistent value for the Latitude Scale Bar position','Error')
		set(handles.edit_XposLatitude, 'String', '');    handles.command{10} = '';
		set(handles.edit_ShowCommand, 'String', [handles.command{5:end}]);
		return
	end
	handles.output = get(handles.edit_ShowCommand, 'String');
	guidata(hObject,handles);
	uiresume(handles.figure1);

% --- Executes when user attempts to close figure1.
function figure1_CloseRequestFcn(hObject, evt)
	handles = guidata(hObject);
	if (exist('OCTAVE_VERSION','builtin'))		% To know if we are running under Octave
		do_uiresume = ( isprop(hObject, '__uiwait_state__') && strcmp(get(hObject, '__uiwait_state__'), 'active') );
	else
		do_uiresume = strcmp(get(handles.figure1, 'waitstatus'), 'waiting');
	end
	if (do_uiresume)		% The GUI is still in UIWAIT, us UIRESUME
		handles.output = [];		% User gave up, return nothing
		guidata(handles.figure1, handles);	uiresume(handles.figure1);
	else					% The GUI is no longer waiting, just close it
		delete(handles.figure1);
	end

% --- Executes on key press over figure1 with no controls selected.
function figure1_KeyPressFcn(hObject, evt)
	handles = guidata(hObject);
	if isequal(get(hObject,'CurrentKey'),'escape')
		handles.output = '';    % User said no by hitting escape
		guidata(hObject, handles);
		uiresume(handles.figure1);
	end


% --- Creates and returns a handle to the GUI figure. 
function draw_scale_LayoutFcn(h1)

set(h1,...
'PaperUnits','centimeters',...
'CloseRequestFcn',@figure1_CloseRequestFcn,...
'Color',get(0,'factoryUicontrolBackgroundColor'),...
'KeyPressFcn',@figure1_KeyPressFcn,...
'MenuBar','none',...
'Name','draw_scale',...
'NumberTitle','off',...
'Position',[265.768111202607 190.120079430433 280 264],...
'RendererMode','manual',...
'Resize','off',...
'Tag','figure1');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Enable','off',...
'Position',[31 238 62 15],...
'String','decimal',...
'Style','radiobutton',...
'TooltipString','Enter geographical coordinates in dd.xx format',...
'Value',1,...
'Tag','radio_decimal');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Enable','off',...
'Position',[109 238 66 15],...
'String','dd:mm.xx',...
'Style','radiobutton',...
'TooltipString','Enter geographical coordinates in dd:mm.xx format',...
'Tag','radio_DegMin');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Enable','off',...
'Position',[192 238 79 15],...
'String','dd:mm:ss.xx',...
'Style','radiobutton',...
'TooltipString','Enter geographical coordinates in dd:mm:ss.xx format',...
'Tag','radio_DegMinSec');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Position',[109 217 79 15],...
'String','Geog unities',...
'Style','radiobutton',...
'TooltipString','Scale position is given in geographical coordinates',...
'Value',1,...
'Tag','radio_GeogUnities');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Position',[192 217 79 15],...
'String','Paper unities',...
'Style','radiobutton',...
'TooltipString','Scale position is given in paper coordinates',...
'Tag','radio_PaperUnities');

uicontrol('Parent',h1,...
'BackgroundColor',[1 1 1],...
'Call',@main_uiCB,...
'HorizontalAlignment','left',...
'Position',[110 191 161 21],...
'Style','edit',...
'Tag','edit_XposLongitude');

uicontrol('Parent',h1,...
'BackgroundColor',[1 1 1],...
'Call',{@main_uiCB,h1,'edit_YposLatitude_CB'},...
'HorizontalAlignment','left',...
'Position',[110 165 161 21],...
'Style','edit',...
'Tag','edit_YposLatitude');

uicontrol('Parent',h1,...
'BackgroundColor',[1 1 1],...
'Call',@main_uiCB,...
'HorizontalAlignment','left',...
'Position',[110 139 161 21],...
'Style','edit',...
'Tag','edit_LatitudeOfScale');

uicontrol('Parent',h1,...
'BackgroundColor',[1 1 1],...
'Call',@main_uiCB,...
'HorizontalAlignment','left',...
'Position',[110 113 161 21],...
'Style','edit',...
'TooltipString','e.g. 50, means a bar whose unprojected length is 50 km ',...
'Tag','edit_LengthOfScale');

uicontrol('Parent',h1,...
'BackgroundColor',[1 1 1],...
'Call',@main_uiCB,...
'Position',[110 86 111 22],...
'String',{  'kilometers'; 'miles'; 'nautical miles' },...
'Style','popupmenu',...
'TooltipString','Select Scale unities',...
'Value',1,...
'Tag','popup_ScaleUnities');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Position',[110 64 81 15],...
'String','Fancy Scale',...
'Style','checkbox',...
'TooltipString','Draw scale using fancy style',...
'Tag','check_Fancy');

uicontrol('Parent',h1,...
'BackgroundColor',[1 1 1],...
'Call',@main_uiCB,...
'HorizontalAlignment','left',...
'Position',[10 33 261 20.8],...
'Style','edit',...
'TooltipString','Display corresponding GMT command',...
'Tag','edit_ShowCommand');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Position',[205 7 66 23],...
'String','OK',...
'Tag','push_OK');

uicontrol('Parent',h1,...
'Call',@main_uiCB,...
'Position',[132 7 66 23],...
'String','Cancel',...
'Tag','push_Cancel');

uicontrol('Parent',h1,...
'Enable','inactive',...
'HorizontalAlignment','left',...
'Position',[10 194 97 17],...
'String','Bar Scale X position',...
'Style','text');

uicontrol('Parent',h1,...
'Enable','inactive',...
'HorizontalAlignment','left',...
'Position',[10 167 98 15],...
'String','Bar Scale Y position',...
'Style','text');

uicontrol('Parent',h1,...
'Enable','inactive',...
'HorizontalAlignment','left',...
'Position',[10 143 91 15],...
'String','Scale at this Lat',...
'Style','text');

uicontrol('Parent',h1,...
'Enable','inactive',...
'HorizontalAlignment','left',...
'Position',[10 116 91 15],...
'String','Bar Scale length',...
'Style','text');

uicontrol('Parent',h1,...
'Enable','inactive',...
'HorizontalAlignment','left',...
'Position',[10 89 71 15],...
'String','Scale unities',...
'Style','text');

function main_uiCB(hObject, eventdata)
% This function is executed by the callback and than the handles is allways updated.
	feval([get(hObject,'Tag') '_CB'],hObject, guidata(hObject));
